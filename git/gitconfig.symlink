[user]
name = Matt Duck
email = matt@mattduck.com
editor = vim

[core]
excludesfile = ~/.gitignore

# swap github https for SSH to avoid having to login
#[url "git@github.com:"]
#insteadOf = https://github.com/

[alias]
s = "!tig status"
co = checkout
cob = checkout -b
ci = commit --verbose
b = branch -av

d = diff
dc = diff --cached
dd = "!git diff | ydiff -s -w 120 -l --wrap -- "
ddc = "!git diff --cached | ydiff -s -w 120 -l --wrap -- "

t = !tig

save =!git stash --all --keep-index && git stash apply
stashq = stash --all --keep-index
qstash = stash --all --keep-index
aliases=!git config -l | grep alias | cut -c 7-
undo-commit = reset HEAD~1 --mixed
github-switch-url = "!,github-switch-url"

stashpull ="!f() { git stash --all --keep-index && git pull $@ && git stash pop; }; f "

# Delete all branches that have been merged into master or given branch
# Could do with passing --no-run-if-empty to xargs here, but that's only a
# valid flag for GNU xargs.
#
# Not to be confused with `git clean`, which I don't really use.
tidy = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"

# Grep through all commits
hgrep = "!f() { git rev-list --all | xargs git grep $@; }; f"

# Temporarily ignore files
assume-unchanged=update-index --assume-unchanged
assume-changed=update-index --no-assume-unchanged
assumed=!git ls-files -v | grep '^[[:lower:]]'

# List recent branches
recent = "for-each-ref --sort='-authordate:iso8601' --format='%(authordate:relative) %09%09 %(refname:short)' refs/heads"
cor = "!f() { git checkout "$(git for-each-ref --sort='-authordate:iso8601' --count 20 --format '%(refname:short)' refs/heads" | fzf --preview='git log {}'); }; f"

# %h   short hash
# %s   subject
# %cn  committer
# %ad  date
# %d   branch
l = "!f() { tig $@ || git log --pretty=format:'%C(10)%h %C(12)%ad %C(blue)%an %C(3)%s%C(auto)%d' --date=relative $@; }; f"
ll = "!git l --all"

[diff]
# I find this easier to read
algorithm = patience
colorMoved = default

[color]
ui = true
branch = auto
diff = auto
interactive = auto
status = auto

[color.diff]
new = green
old = brightred
context = normal
meta = white
frag = white

# commit = white
# old = 9
# new = 2
# context = 10
# whitespace = 5
# meta = 7
# frag = 6
# commit = 3

[color.decorate]
branch = 6 ul
remotebranch = 9 ul
tag = 5 ul
stash = 13 ul
HEAD = 1 ul

[color.status]
changed = yellow
added = 2
#changed = 9
untracked = 10
branch = 5 ul
nobranch = 1
unmerged = 9

[pager]
diff = delta
log = delta
reflog = delta
show = delta

[interactive]
diffFilter = delta --color-only

[delta]
side-by-side = true
keep-plus-minus-markers = true
line-numbers = true
hyperlinks = true
true-color = true
syntax-theme = ansimatt

# 16 should be dark black
minus-style = syntax 16
plus-style = syntax 16
zero-style = syntax

# 52/22 should be dark red/green
minus-emph-style = syntax 52
plus-emph-style = syntax 22

line-numbers-left-style = brightblack
line-numbers-right-style = brightblack

line-numbers-minus-style = red
line-numbers-plus-style = green
line-numbers-zero-style = brightblack

minus-empty-line-marker-style = red
plus-empty-line-marker-style = green

whitespace-error-style = white reverse
hunk-header-decoration-style = 8 box
hunk-header-style = brightwhite line-number

file-decoration-style = blue italic
file-style = blue

commit-decoration-style = 8 ol


# Include local config if it exists
[include]
path = "~/.gitconfig-local"
[github]
user = mattduck
